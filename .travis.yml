os:
    - linux
    - osx

language: java

jdk:
    - oraclejdk8
    - openjdk9
    - openjdk11

env:
    - GRAALVM_VERSION="1.0.0-rc16"
    - GRAALVM_VERSION="NONE" WASM_BUILD_NATIVE="false"

matrix:
    exclude:
        - env: GRAALVM_VERSION="1.0.0-rc16"
          jdk: openjdk11
        - jdk: openjdk9
          os: linux
        - jdk: oraclejdk8
          os: osx

install:
    - |
        # Component installation is currently broken. Re-enable once fixed.
        # cd .. && mv wasmlanguage "wasm language" && cd "wasm language"
        if [[ "$GRAALVM_VERSION" != "NONE" ]]; then
          if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then DOWNLOAD_OS_NAME="macos"; fi
          if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then DOWNLOAD_OS_NAME="linux"; fi
          curl -LJ "https://github.com/oracle/graal/releases/download/vm-$GRAALVM_VERSION/graalvm-ce-$GRAALVM_VERSION-$DOWNLOAD_OS_NAME-amd64.tar.gz" --output graalvm.tar.gz
          tar -xzf graalvm.tar.gz
          export JAVA_HOME="$(pwd)/graalvm-ce-$GRAALVM_VERSION"
          if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export JAVA_HOME="$JAVA_HOME/Contents/Home"; fi
        else
          if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export JAVA_HOME=$(/usr/libexec/java_home); fi
        fi

script:
    - mvn package
    - ./wasm language/tests/Add.wat
    - if [[ "$GRAALVM_VERSION" != "NONE" ]]; then ./native/wasmnative language/tests/Add.wat; fi
    - if [[ "$GRAALVM_VERSION" != "NONE" ]]; then "$JAVA_HOME/bin/gu" install -L component/wasm-component.jar ; fi
    - if [[ "$GRAALVM_VERSION" != "NONE" ]]; then "$JAVA_HOME/bin/wasm" language/tests/Add.wat; fi
    - if [[ "$GRAALVM_VERSION" != "NONE" ]]; then "$JAVA_HOME/bin/wasmnative" language/tests/Add.wat; fi
    - if [[ "$GRAALVM_VERSION" != "NONE" ]]; then "$JAVA_HOME/bin/polyglot" --jvm --language wasm --file language/tests/Add.wat; fi
    - ./generate_parser
    - mvn package
    - ./wasm language/tests/Add.wat
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then shellcheck wasm; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then (find . -name '*.sh' | grep -v graalvm | xargs shellcheck); fi
